#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "knapsack.h"

int best_by_enumeration(int pricelist[], int n, int budget) {
	int best = 0, sum;
	char cart[n + 1]; /* 0 と 1 しか使わない */
	memset(cart, 0, n + 1); /* 全部 0 で埋める */
	while ( !cart[n] ) {
		sum = 0;
		for(int i = 0; i < n; ++i) {
			if ( cart[i] )
				sum += pricelist[i];
		}
		if ( sum <= budget && sum > best ) {
			best = sum;
		}
		for(int i = 0; i < n + 1; ++i) {
			if ( cart[i] == 0 ) {
				cart[i] = 1;
				break;
			} else {
				cart[i] = 0;
			}
		}
	}
	return best;
}

int bes_by_recursion(Knapsack * inst, int startIndex, int rbudget) {
	int sum_skip, sum_buy;
	if ( startIndex >= inst->number ) {
		return 0;
	}
	sum_skip = bestprice_recursive(inst, startIndex+1, rbudget);
	// default --- don't buy it
	if ( inst->price[startIndex] > rbudget)
		return sum_skip;
	sum_buy = inst->price[startIndex] + bestprice_recursive(inst, startIndex + 1, rbudget - inst->price[startIndex]);
	if (sum_buy > sum_skip)
		return sum_buy;
	return sum_skip;
}

/*
int bestcart_dp(Knapsack * inst, char cart[]) {
	int best[list.number][budget+1];

	// filling the only-1st-item row.
	for (int b = 0; b <= budget; b++) {
		if (list.price[0] > b)
			best[0][b] = 0;
		else
			best[0][b] = list.price[0];
	}

	// filling rows from the 2nd-item to the last-item.
	for (int i = 1; i < list.number; i++) {
		for (int b = 0; b <= budget; b++) {
			if (list.price[i] > b) {
				best[i][b] = best[i-1][b];
				continue;
			}
			if ( best[i-1][b] > list.price[i] + best[i-1][b-list.price[i]] )
				best[i][b] = best[i-1][b];
			else
				best[i][b] = list.price[i] + best[i-1][b-list.price[i]];
		}
	}
	
	// back tracking on the dp table.
	int total = best[list.number-1][budget];
	for(int itemcount = list.number; itemcount > 1; --itemcount) {
		if ( best[itemcount - 1][total] == best[itemcount - 2][total] ) {
			cart[itemcount - 1] = 0;
		} else {
			total -= list.price[itemcount - 1];
			cart[itemcount - 1] = 1;
		}
	}
	cart[0] = ( best[0][total] == list.price[0] );

	return best[list.number-1][budget];
}
*/
